name: life check
on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - master
      - AddActions4life
jobs:
    check:
      runs-on: ubuntu-latest
      strategy:
        matrix:
          include:
            - PRODUCT: golang
              VERSION: 1.20
            - PRODUCT: python
              VERSION: 3.11
      steps:
      - name: Checkout from repository.
        uses: actions/checkout@v2
      - name: Check a latest version.
        id: env
        run: |
            curl -L -s --request GET --url https://endoflife.date/api/${{matrix.PRODUCT}}/${{matrix.CYCLE}}.json --header 'Accept: application/json' > /tmp/version.json
            echo "Version=$(cat /tmp/version.json | jq '.latest')" >> "$GITHUB_OUTPUT"
            echo "IsEol=$(cat /tmp/version.json | jq '.eol')" >> "$GITHUB_OUTPUT"
      - name: Update
        id: need_update
        run: |
            cp dockerfiles/${{matrix.PRODUCT}}/Dockerfile /tmp/Dockerfile_bk
            version=${{steps.env.outputs.Version}}; sed -i 's/${{matrix.PRODUCT}}:[0-9.]*\s/${{matrix.PRODUCT}}:'${version}' /' dockerfiles/${{matrix.PRODUCT}}/Dockerfile
            diff -q /tmp/Dockerfile_bk dockerfiles/${{matrix.PRODUCT}}/Dockerfile
        continue-on-error: true
      - name: CreatePR
        uses: peter-evans/create-pull-request@v5
        with:
          title: '[Example] Update report'
        if: steps.need_update.outcome == 'failure'
      - name: checkoel
        id: is_eol
        run: test "false" == "${{steps.env.outputs.IsEol}}" && exit 1
        continue-on-error: true
      - name: CreateIssueTemplate
        run: |
            mkdir .tmp
            echo "---" >> .tmp/issue.md
            echo "title: test" >> .tmp/issue.md
            echo "assignees: hinoshiba" >> .tmp/issue.md
            echo "---" >> .tmp/issue.md
            echo "iambody" >> .tmp/issue.md
            cat .tmp/issue.md
        if: steps.is_eol.outcome == 'failure'
      - name: check issue template
        run: |
            cat .tmp/issue.md
        if: steps.is_eol.outcome == 'failure'
      - name: CreateIssue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          update_existing: true
          search_existing: all
          filename: .tmp/issue.md
        if: steps.is_eol.outcome == 'failure'
