name: imgbuild
on:
  schedule:
    - cron: "0 0 * * 6"
  push:
    branches:
      - master
env:
  MYNAME: hinoshiba
jobs:
    setup:
      runs-on: ubuntu-latest
      outputs:
        Weekid: ${{ steps.date.outputs.Weekid }}
      steps:
      - name: Get current week-id
        id: date
        run: echo "Weekid=$(date +'%Y%U')" >> "$GITHUB_OUTPUT"

    imgbuild-workbehcn:
      runs-on: ubuntu-latest
      needs: setup
      steps:
      - name: Checkout from repository.
        uses: actions/checkout@v2
      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push to Docker Hub for workbench.
        uses: docker/build-push-action@v2
        with:
          context: dockerfiles/workbench
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.MYNAME}}/workbench:latest
            ${{ env.MYNAME}}/workbench:${{ needs.setup.outputs.Weekid }}

    imgbuild-golang:
      runs-on: ubuntu-latest
      needs: setup
      steps:
      - name: Checkout from repository.
        uses: actions/checkout@v2
      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push to Docker Hub for golang.
        uses: docker/build-push-action@v2
        with:
          context: dockerfiles/golang
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.MYNAME}}/golang:latest
            ${{ env.MYNAME}}/golang:${{ needs.setup.outputs.Weekid }}

    imgbuild-golang1_21_3:
      runs-on: ubuntu-latest
      needs: setup
      steps:
      - name: Checkout from repository.
        uses: actions/checkout@v2
      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push to Docker Hub for golang.
        uses: docker/build-push-action@v2
        with:
          context: dockerfiles/golang1_21_3
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.MYNAME}}/golang:1.21.3

    imgbuild-rust:
      runs-on: ubuntu-latest
      needs: setup
      steps:
      - name: Checkout from repository.
        uses: actions/checkout@v2
      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push to Docker Hub for golang.
        uses: docker/build-push-action@v2
        with:
          context: dockerfiles/rust
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.MYNAME}}/rust:latest
            ${{ env.MYNAME}}/rust:${{ needs.setup.outputs.Weekid }}

    imgbuild-python:
      runs-on: ubuntu-latest
      needs: setup
      steps:
      - name: Checkout from repository.
        uses: actions/checkout@v2
      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push to Docker Hub for python.
        uses: docker/build-push-action@v2
        with:
          context: dockerfiles/python
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.MYNAME}}/python:latest
            ${{ env.MYNAME}}/python:${{ needs.setup.outputs.Weekid }}

    imgbuild-nginx:
      runs-on: ubuntu-latest
      needs: setup
      steps:
      - name: Checkout from repository.
        uses: actions/checkout@v2
      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push to Docker Hub for nginx.
        uses: docker/build-push-action@v2
        with:
          context: dockerfiles/nginx
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.MYNAME}}/nginx:latest
            ${{ env.MYNAME}}/nginx:${{ needs.setup.outputs.Weekid }}

    imgbuild-research:
      runs-on: ubuntu-latest
      needs: setup
      steps:
      - name: Checkout from repository.
        uses: actions/checkout@v2
      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push to Docker Hub for research.
        uses: docker/build-push-action@v2
        with:
          context: dockerfiles/research
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.MYNAME}}/research:latest
            ${{ env.MYNAME}}/research:${{ needs.setup.outputs.Weekid }}

    imgbuild-tor:
      runs-on: ubuntu-latest
      needs: setup
      steps:
      - name: Checkout from repository.
        uses: actions/checkout@v2
      - name: Set up Docker Buildx.
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push to Docker Hub for tor.
        uses: docker/build-push-action@v2
        with:
          context: dockerfiles/tor
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.MYNAME}}/tor:latest
            ${{ env.MYNAME}}/tor:${{ needs.setup.outputs.Weekid }}
